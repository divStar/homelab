formatter: "markdown" # this is required

header-from: "main.tf"

recursive:
  enabled: false

sections:
  hide: []
  show: []

content: |-
  {{ .Header }}
  ## Contents

  <blockquote>

  - [Requirements](#requirements)
  - [Providers](#providers)
  - [Execution story](#execution-story)
  {{- if .Module.HasModuleCalls }}
  - [Modules](#modules) _(nested and adjacent)_
    {{- range .Module.ModuleCalls }}
    - [{{ .Name }}](#{{ .Name }})
    {{- end }}
  {{- end }}
  {{- if .Module.HasResources }}
  - [Resources](#resources)
    {{- range .Module.Resources }}
      {{- if eq .GetMode "resource" }}
        {{- $spec := split "." .Spec }}
    - _{{$spec._0}}_.[{{ $spec._1 }}](#{{ $spec._0 }}{{ $spec._1 }})
      {{- end -}}
    {{- end -}}
  {{- end }}
  - [Variables](#variables)
  {{- range .Module.Inputs }}
    - [{{ .Name }}](#{{ .Name }}-{{- if .Required -}}required{{- else }}optional{{- end }}) ({{- if .Required -}}**Required**{{- else }}*Optional*{{- end }})
  {{- end }}
  {{- if .Module.HasOutputs }}
  - [Outputs](#outputs)
    {{- range .Module.Outputs }}
    - [{{ .Name }}](#{{ .Name }})
    {{- end -}}
  {{- end}}
  </blockquote>

  {{ .Requirements }}

  {{ .Providers }}

  ## Execution story

  Order in which Terraform will create resources (and likely destroy them in reverse order):
  ```
  EXECUTION_STORY_PLACE_HOLDER
  ```
  
  {{ if .Module.HasModuleCalls -}}
  ## Modules
    {{- range .Module.ModuleCalls }}
  <blockquote>

  ### `{{ .Name }}`
  {{ .Description.Raw }}
    <table>
      <tr>
        <td>Module location</td>
        <td><code>{{ .Source }}</code></td>
      </tr>
      <tr>
        <td>In file</td>
        <td><a href="./{{ .Position.Filename }}#L{{ .Position.Line }}"><code>{{ .Position.Filename }}#L{{ .Position.Line }}</code></a></td>
      </tr>
      <tr>
        <td colspan="2"><a href="{{ .Source }}/README.md">README.md</a> <em>(experimental)</em></td>
      </tr>
    </table>
  </blockquote>
    {{- end }}
  {{- end }}

  {{ if .Module.HasResources }}
  ## Resources
    {{- range .Module.Resources }}
      {{- if eq .GetMode "resource" }}
        {{- $specs := split "." .Spec }}
  <blockquote>

  #### _{{ $specs._0 }}_.`{{ $specs._1 }}`
  {{ .Description.Raw }}
    <table>
      <tr>
        <td>Provider</td>
        <td><code>{{ .ProviderName }} ({{ .ProviderSource }})</code></td>
      </tr>
      <tr>
        <td>In file</td>
        <td><a href="./{{ .Position.Filename }}#L{{ .Position.Line }}"><code>{{ .Position.Filename }}#L{{ .Position.Line }}</code></a></td>
      </tr>
    </table>
  </blockquote>
      {{- end -}}
    {{- end }}
  {{- end }}

  ## Variables
  {{- range .Module.Inputs }}
  <blockquote>

  ### `{{ .Name }}` ({{- if .Required -}}**Required**{{- else }}*Optional*{{- end }})
  {{ .Description.Raw }}

  <details style="border-top-color: inherit; border-top-width: 0.1em; border-top-style: solid; padding-top: 0.5em; padding-bottom: 0.5em;">
    <summary>Show more...</summary>

    **Type**:
    ```hcl
    {{ .Type }}
    ```
    {{- if .HasDefault }}
    **Default**:
    ```json
    {{ .GetValue }}
    ```
    {{- end }}
    In file: <a href="./{{ .Position.Filename }}#L{{ .Position.Line }}"><code>{{ .Position.Filename }}#L{{ .Position.Line }}</code></a>

  </details>
  </blockquote>
  {{- end }}

  {{ if .Module.HasOutputs }}
  ## Outputs
    {{- range .Module.Outputs }}
  <blockquote>

  #### `{{ .Name }}`
  {{ .Description.Raw }}

  In file: <a href="./{{ .Position.Filename }}#L{{ .Position.Line }}"><code>{{ .Position.Filename }}#L{{ .Position.Line }}</code></a>
  </blockquote>
    {{- end -}}
  {{- end -}} 
  
  {{ .Footer }}

output:
  file: "README.md"
  mode: replace
  template: |-
    {{ .Content }}

output-values:
  enabled: false
  from: ""

sort:
  enabled: true
  by: required

settings:
  anchor: true
  color: true
  default: true
  description: true
  escape: true
  hide-empty: false
  html: false
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
