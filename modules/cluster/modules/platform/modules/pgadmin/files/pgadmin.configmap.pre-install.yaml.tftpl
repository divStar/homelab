apiVersion: v1
kind: ConfigMap
metadata:
  name: ${pgadmin_configmap_name}
  namespace: ${pgadmin_namespace}
data:
  config_local.py: |
    # docs: https://www.pgadmin.org/docs/pgadmin4/latest/config_py.html#config-py
    import logging
    import os

    # Debug settings
    DEBUG = True
    CONSOLE_LOG_LEVEL = logging.DEBUG
    FILE_LOG_LEVEL = logging.DEBUG

    MAX_LOGIN_ATTEMPTS = 5
    ENHANCED_COOKIE_PROTECTION = False

    # Authentication configuration
    MASTER_PASSWORD_REQUIRED = True
    AUTHENTICATION_SOURCES = ['oauth2', 'internal']
    OAUTH2_AUTO_CREATE_USER = True
    # OAuth2 Configuration
    OAUTH2_CONFIG = [{
      'OAUTH2_SSL_CERT_VERIFICATION': False,
      'OAUTH2_NAME': 'Zitadel',
      'OAUTH2_DISPLAY_NAME': 'Zitadel',
      'OAUTH2_CLIENT_ID': os.environ['OAUTH2_CLIENT_ID'],
      'OAUTH2_CLIENT_SECRET': os.environ['OAUTH2_CLIENT_SECRET'],
      'OAUTH2_API_BASE_URL': 'https://zitadel.${cluster_domain}/',
      'OAUTH2_AUTHORIZATION_URL': 'https://zitadel.${cluster_domain}/oauth/v2/authorize',
      'OAUTH2_TOKEN_URL': 'https://zitadel.${cluster_domain}/oauth/v2/token',
      'OAUTH2_USERINFO_ENDPOINT': 'oidc/v1/userinfo',
      'OAUTH2_SERVER_METADATA_URL': 'https://zitadel.${cluster_domain}/.well-known/openid-configuration',
      'OAUTH2_LOGOUT_URL': 'https://zitadel.${cluster_domain}/oidc/v1/end_session?id_token_hint={id_token}&client_id=' + os.environ['OAUTH2_CLIENT_ID'] + '&post_logout_redirect_uri=https://pgadmin.${cluster_domain}/',
      'OAUTH2_SCOPE': 'openid email profile',
      'OAUTH2_USERNAME_CLAIM': 'email',
      'OAUTH2_ICON': 'fas fa-key',
      'OAUTH2_BUTTON_COLOR': '#1c3054',
      'OAUTH2_CHALLENGE_METHOD': 'S256',
      'OAUTH2_RESPONSE_TYPE': 'code'
    }]